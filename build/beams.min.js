"use strict";var Beams={Types:{},Vertical:"vertical",Horizontal:"horizontal"};
(function(){class Point{constructor(x,y){this.x=x,this.y=y}}Beams.Point=Point,Beams.point=function(){return 1==arguments.length?Array.isArray(arguments[0])?new Point(arguments[0][0],arguments[0][1]):new Point(arguments.x,arguments.y):new Point(arguments[0],arguments[1])},Beams.math={point_add(a,b){return new Point(a.x+b.x,a.y+b.y)},point_sub(a,b){return new Point(a.x-b.x,a.y-b.y)},point_mul(a,b){return new Point(a.x*b.x,a.y*b.y)},point_div(a,b){return new Point(a.x/b.x,a.y/b.y)},point_rotate(point,radians,origin){origin=origin||Beams.point(0,0);const pad=this.point_sub(point,origin);return Beams.point(pad.x*Math.cos(radians)-pad.y*Math.sin(radians)+origin.x,pad.y*Math.cos(radians)+pad.x*Math.sin(radians)+origin.y)},point_scale(point,ratio,origin){origin=origin||Beams.point(0,0);const offset=this.point_sub(point,origin);return this.point_add(Beams.point(offset.x*ratio,offset.y*ratio),origin)},fuzzy_float(a,b,epsilon){return void 0===epsilon&&(epsilon=2e-4),Math.abs(a-b)<=epsilon}}})();
(function(){class EventConnection{constructor(name,callback){this.name=name,this.callback=callback}}Beams.EventConnection=EventConnection,Beams.EventInterface=class{constructor(){this._events=[]}on(event,callback){var conn=new EventConnection(event,callback);return this._events.push(conn),conn}emit(event,parameters){this._events.forEach(e=>{if(e.name==event)try{e.callback(parameters)}catch(e){console.log("Error on callback: ",e)}})}disconnect(connection){this._events=this._events.filter(conn=>conn!=connection)}}})();
(function(){class Interface extends Beams.EventInterface{constructor(options){options=options||{},super(options),this._margins=Beams.point(options.margins||[0,0]),this._snap=Snap()}get snap(){return this._snap}get node(){return this._snap.node}get margins(){return this._margins}set margins(margins){this._margins=Beams.point(margins),this.render()}get bbox(){return{x:this.margins.x,y:this.margins.y,w:this.node.clientWidth-2*this.margins.x,h:this.node.clientHeight-2*this.margins.y,center(){return Beams.point(this.x+this.w/2,this.y+this.h/2)}}}inject(element){if(element){var place=element;if("string"==typeof element){var id=element.replace(/^#/,"");place=document.getElementById(id)}place.appendChild(this.node),this.render()}}render(){}}Beams.Interface=Interface})();
(function(){Beams.utils={destroy(elements){for(var i=0;i<elements.length;i++)elements[i].remove()},points_to_path(points){for(var char,path="",i=0;i<points.length;i++){char=0==i?"M":"L";const point=points[i];path+=`${char}${point.x} ${point.y}`}return path},color:{rgbColors(saturation,lightness,amount){let colors=[],huedelta=Math.trunc(180/amount);for(let hue,i=0;i<amount;i++){hue=i*huedelta;const rgb=this.hsl2rgb(hue,saturation,lightness);colors.push(`rgb(${255*rgb[0]},${255*rgb[1]},${255*rgb[2]})`)}return colors},hsl2rgb(h,s,l){let a=s*Math.min(l,1-l),f=(n,k=(n+h/30)%12)=>l-a*Math.max(Math.min(k-3,9-k,1),-1);return[f(0),f(8),f(4)]}}};class Norm{constructor(){this.high=null,this.low=null,this.total=0}include(val){this.high=null===this.high?val:Math.max(this.high,val),this.low=null===this.low?val:Math.min(this.low,val),isNaN(val)||(this.total+=val)}get difference(){return Math.abs(this.high-this.low)}calculate(offset,size,value,oneminus){var val,percent=(value-this.low)/Math.max(this.difference,1);return val=oneminus?offset+(1-size*percent+size):offset+size*percent,val}value_at(percent){return percent*this.difference+this.low}}Beams.utils.Norm=Norm})();
(function(){class Axis extends Beams.EventInterface{constructor(options){super(),options=options||{},this.label=options.label||"Data",this.tickLabel=options.tickLabel||((c,v)=>v),this.labelClass=options.labelClass||"",this.labelVisible=options.labelVisible||!1,this.buffer=options.buffer||15,this.padding=options.padding||5,this.tickCount=options.tickCount||5,this.showTicks=options.showTicks||!0,this.showTickLabels=options.showTickLabels,this.showTickLabels===void 0&&(this.showTickLabels=this.showTicks),this._elements=[],this._axis=null}set_axis(axis){this._axis=axis}render(chart,snap){if(Beams.utils.destroy(this._elements),this._elements=[],chart.type==Beams.Types.Line){var line,bounds=chart.bboxes();if(this._axis==Axis.X){const bbox=bounds.xaxis;if(line=snap.line(bbox.x,bbox.y,bbox.x+bbox.w,bbox.y),this.showTicks||this.showTickLabels){var offset=this.padding;const o=bbox.w-2*this.padding,delta=o/Math.max(this.tickCount,1);for(var i=0;i<=this.tickCount;i++){const shift=offset+delta*i;if(this.showTicks){var tick=snap.line(bbox.x+shift,bbox.y,bbox.x+shift,bbox.y+5);tick.attr({stroke:chart.style.axisColor}),this._elements.push(tick)}if(this.showTickLabels){const text=this.tickLabel(chart,chart.x_norm.value_at(i/this.tickCount));var telement=snap.text(bbox.x+shift,bbox.y+12,text),style=chart.style.tickLabelStyle;Object.assign(style,{"text-anchor":"middle","dominant-baseline":"middle"}),telement.attr(style),this._elements.push(telement)}}}}else{const bbox=bounds.yaxis;if(line=snap.line(bbox.x+bbox.w,bbox.y,bbox.x+bbox.w,bbox.y+bbox.h),this.showTicks||this.showTickLabels){var offset=this.padding;const delta=(bbox.h-2*this.padding)/Math.max(this.tickCount,1);for(var i=this.tickCount;0<=i;i--){const shift=offset+delta*i;if(this.showTicks){var tick=snap.line(bbox.x+bbox.w-5,bbox.y+shift,bbox.x+bbox.w,bbox.y+shift);tick.attr({stroke:chart.style.axisColor}),this._elements.push(tick)}if(this.showTickLabels){const text=this.tickLabel(chart,chart.y_norm.value_at((this.tickCount-i)/this.tickCount));var telement=snap.text(bbox.x+bbox.w-8,bbox.y+shift,text),style=chart.style.tickLabelStyle;Object.assign(style,{"text-anchor":"end","dominant-baseline":"middle"}),telement.attr(style),this._elements.push(telement)}}}}line.attr({stroke:chart.style.axisColor}),this._elements.push(line)}}}Axis.X="X",Axis.Y="Y",Beams.Axis=Axis,Beams.axis_interceptor={set(obj,prop,value){obj[prop]=value,obj.emit("changed")}}})();
(function(){Beams.Data=class{constructor(options){options=options||{},this.hovered=!1}render_legend(){}}})();
(function(){class Chart extends Beams.Interface{constructor(type,options){options=options||{},super(options),this.type=type,this._style=new Beams.ChartStyle(options.style),this.created=options.created||(()=>{})}get style(){return new Proxy(this._style,Beams.style_interceptor)}get data(){throw Error("data getter is requried!")}set data(data){throw Error("data setter is requried!")}}Beams.Chart=Chart})();
(function(){Beams.ChartStyle=class{constructor(options){options=options||{},this._data={backgroundColor:"none",axisColor:"white",tickLabelStyle:{"font-size":"9px","font-family":"monospace",fill:"white"}},Object.assign(this._data,options)}};Beams.LegendStyle=class{constructor(options){options=options||{},this._data={backgroundColor:"none",spacing:8,labelColor:"white",labelSize:"12px",labelFont:"monospace",chipSize:16,chipStroke:"none",chipStrokeWidth:"none"},Object.assign(this._data,options)}},Beams.style_interceptor={get(obj,prop){return obj._data[prop]}}})();
(function(){class Legend extends Beams.Interface{constructor(options){options=options||{},super(options),this._chart=options.chart||null,this._chart.on("rendered",this.render.bind(this)),this._style=new Beams.LegendStyle(options.style),this.direction=options.direction||Beams.Vertical,this.inject(options.inject)}get chart(){return this._chart}get style(){return new Proxy(this._style,Beams.style_interceptor)}render(){const d=this._chart.data,box=this.bbox;for(var topleft=Beams.point(box.x,box.y),i=0;i<d.length;i++){const option={topleft:topleft,index:i,total:d.length};var offset=d[i].legend_render(this,this.snap,option);offset+=this.style.spacing,this.direction==Beams.Vertical?topleft.y+=offset:topleft.x+=offset}}}Beams.Legend=Legend})();
(function(){class LineData extends Beams.Data{constructor(options){options=options||{},super(options),this.points=options.data,this.color=options.color||"lightgreen"}}Beams.LineData=LineData;class LineChart extends Beams.Chart{constructor(options){options=options||{},super(Beams.Types.Line,options),this.xaxis=options.x||new Axis,this.xaxis.set_axis(Beams.Axis.X),this.xaxis.on("changed",this.render.bind(this)),this.yaxis=options.y||new Axis,this.yaxis.set_axis(Beams.Axis.Y),this.yaxis.on("changed",this.render.bind(this)),this._point_sort=options.sort||null,this._data=[],this._elements=[],this._draw_positions=[],this.x_norm=new Beams.utils.Norm,this.y_norm=new Beams.utils.Norm,this.inject(options.inject),this.created(this.snap)}get x(){return new Proxy(this.xaxis,Beams.axis_interceptor)}get y(){return new Proxy(this.yaxis,Beams.axis_interceptor)}get data(){return[...this._data]}set data(data){data instanceof LineData?this._data=[data]:Array.isArray(data)?(this._data=[],data.forEach(p=>{p instanceof LineData?this._data.push(p):this._data.push(new LineData(p))})):this._data=[new LineData(data)],this.normalize(),this.render()}render(){Beams.utils.destroy(this._elements),this._elements=[];const sizes=this.bboxes();var r=this.snap.rect(sizes.data.x,sizes.data.y,sizes.data.w,sizes.data.h);r.attr({fill:this.style.backgroundColor}),this._elements.push(r);for(var i=0;i<this._data.length;i++){const path=Beams.utils.points_to_path(this._draw_positions[i]);var line=this.snap.path(path);line.attr({fill:"none",stroke:this._data[i].color,strokeWidth:"2px"}),this._elements.push(line)}this.xaxis.render(this,this.snap),this.yaxis.render(this,this.snap),this.emit("rendered")}bboxes(){var full=this.bbox;const output={margins:{x:this.margins.x,y:this.margins.y},full,xaxis:{x:full.x+this.y.buffer,y:full.h-this.x.buffer,w:full.w-this.y.buffer,h:this.x.buffer},yaxis:{x:full.x,y:full.y,w:this.y.buffer,h:full.h-this.x.buffer-this.margins.y},data:{x:full.x+this.y.buffer,y:full.y,w:full.w-this.y.buffer,h:full.h-this.x.buffer-this.margins.y}};return output}normalize(){this.x_norm=new Beams.utils.Norm,this.y_norm=new Beams.utils.Norm,this._draw_positions=[],this._data.forEach(ld=>{this._point_sort&&ld.points.sort(this._point_sort),ld.points.forEach(point=>{this.x_norm.include(point[0]),this.y_norm.include(point[1])}),this._draw_positions.push([])});const sizes=this.bboxes();for(var i=0;i<this._data.length;i++){const lineData=this._data[i];var positions=this._draw_positions[i];lineData.points.forEach(point=>{positions.push(Beams.point(this.x_norm.calculate(sizes.data.x+this.x.padding,sizes.data.w-2*this.x.padding,point[0]),this.y_norm.calculate(sizes.data.y+this.y.padding,sizes.data.h-2*this.y.padding,point[1],!0)))})}}}Beams.LineChart=LineChart,Beams.Types.Line="Line"})();
(function(){class PieData extends Beams.Data{constructor(options){options=options||{},super(options),this.label=options.label||"Data",this.value=options.value||value,this.color=options.color||null,this._path=null,this.edge_center=null,this.rads=0,this.isTotal=!1,this._chip=null,this._hoverLine=null,this._label=null}legend_render(legend,snap,option){const color=Beams.utils.color.rgbColors(1,.3,option.total)[option.index];this._chip||(this._chip=snap.rect());const p=option.topleft,size=legend.style.chipSize;return this._chip.attr({x:p.x,y:p.y,width:size,height:size,fill:this.color||color,stroke:legend.style.chipStroke}),this._label||(this._label=snap.text()),this._label.attr({text:legend.chart.formatLabel(this.label,this.value),x:p.x+size+6,y:p.y+size/2,fill:legend.style.labelColor,"font-size":legend.style.labelSize,"font-family":legend.style.labelFont,"text-anchor":"start","dominant-baseline":"middle"}),this._hoverLine||(this._hoverLine=snap.line(),this._hoverLine.attr({stroke:"white"})),this.hovered?this._hoverLine.attr({x1:p.x+size+6,y1:p.y+size,x2:p.x+size+this._label.getBBox().w,y2:p.y+size,opacity:"1"}):this._hoverLine.attr({opacity:"0"}),size}get path(){return this._path}set path(p){this._path=p}}const data_interceptor=function(chart){return{set(obj,prop,value){obj[prop]=value,chart.normalize(),chart.render()}}};class PieChart extends Beams.Chart{constructor(options){options=options||{},super(Beams.Types.Pie,options),this.norm=new Beams.utils.Norm,this._data=[],this._elements=[],this._origin=Beams.point(0,0),this.formatLabel=options.formatLabel||(l=>l),this.drawLabels=options.drawLabels||!1,this._lines=[],this.inject(options.inject),this.created(this.snap)}get data(){return[...this._data]}set data(values){this._data=[];for(var i=0;i<values.length;i++)values[i]instanceof PieData?this._data.push(values[i]):this._data.push(new PieData(values[i]));this.normalize(),this.render()}render(){const box=this.bbox;this.rect||(this.rect=this.snap.rect(box.x,box.y,box.w,box.h)),this.rect.attr({x:box.x,y:box.y,width:box.w,height:box.h,fill:this.style.backgroundColor});const colors=Beams.utils.color.rgbColors(1,.3,this._data.length),colorsBright=Beams.utils.color.rgbColors(1,.5,this._data.length);var index=0;`${this._origin.x},${this._origin.y}`;if(1==this._data.length){var circ;1>this._elements.length||"circle"!==this._elements[0].type?(Beams.utils.destroy(this._elements),this._elements=[],circ=this.snap.circle(this._origin.x,this._origin.y,this._radius),this._elements.push(circ)):circ=this._elements[0],circ.attr({fill:this._data[0].color||colors[index]})}else for(var i=0;i<this._data.length;i++){const pd=this._data[i];var path;if(this._elements.length<=i){path=this.snap.path(),this._elements.push(path);let idx=i;path.hover(()=>{this._data[idx].hovered=!0,this.emit("hover:section",{snap:this.snap,element:path,data:new Proxy(this._data[idx],data_interceptor(this))})},()=>{this._data[idx].hovered=!1,this.emit("leave:section",{snap:this.snap,element:path,data:new Proxy(this._data[idx],data_interceptor(this))})})}else path=this._elements[i];path.attr({d:pd.path,fill:pd.color||colors[index],stroke:this._data[0].color||colorsBright[index],strokeWidth:"2px"}),index+=1}for(var i=this._elements.length;i>this._data.length;i--)this._elements[i].remove();this._elements.length=this._data.length,Beams.utils.destroy(this._lines),this._lines=[],this.drawLabels&&this._data.forEach(pd=>{if(pd.rads<1*(Math.PI/180))return;const p1=Beams.math.point_scale(pd.edge_center,.8,this._origin),p2=Beams.math.point_scale(pd.edge_center,1.2,this._origin);var textpad=2,offset=5,left=!1;p2.x<this._origin.x&&(left=!0,offset=-offset,textpad=-textpad);const p3=Beams.point(p2.x+offset,p2.y);var linepath=this.snap.path(Beams.utils.points_to_path([p1,p2,p3]));linepath.attr({fill:"none",stroke:"white"}),this._lines.push(linepath);const lbl=this.formatLabel(pd.label,pd.value);var text=this.snap.text(p3.x+textpad,p3.y,lbl),style=chart.style.tickLabelStyle;Object.assign(style,{"text-anchor":left?"end":"start","dominant-baseline":"middle"}),text.attr(style),this._lines.push(text)}),this.emit("rendered")}normalize(){this.norm=new Beams.utils.Norm;const full=this.bbox;this._data.forEach(pd=>{this.norm.include(pd.value)}),this._origin=full.center(),this._radius=Math.min(full.w,full.h)/2,this.drawLabels&&(this._radius-=50);let sumDeg=0;var ratios=[];this._data.forEach(pd=>{ratios.push(Math.abs(pd.value)/this.norm.total)});for(var i=0;i<ratios.length;i++){const pd=this._data[i],ratio=ratios[i],rads=2*ratio*Math.PI;if(Beams.math.fuzzy_float(rads,0)){const large=Math.max(...ratios);ratios[i]=.001;const idx=ratios.indexOf(large);ratios[idx]-=.001}}for(var i=0;i<this._data.length;i++){const o=this._origin,r=this._radius,pd=this._data[i],ratio=ratios[i];if(1>ratio){const rads=2*ratio*Math.PI,point2=Beams.math.point_rotate(Beams.point(o.x+r,o.y),sumDeg,o);pd.edge_center=Beams.math.point_rotate(point2,rads/2,o);const point3=Beams.math.point_rotate(point2,rads,o),f1=rads>Math.PI?1:0,f2=rads<Math.PI?0:1;var path=`M${o.x} ${o.y}`;path+=`L${point2.x} ${point2.y}`,path+=`A${r} ${r} 0 ${f1} 1 ${point3.x} ${point3.y}`,path+=`Z`,pd.isTotal=!1,pd.path=path,pd.rads=rads,sumDeg+=rads}else pd.isTotal=!0,pd.edge_center=Beams.point(o.x+r,o.y),pd.rad=6.28319}}}Beams.PieChart=PieChart,Beams.Types.Pie="Pie"})();